% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary.R
\name{summary.Learner}
\alias{summary.Learner}
\alias{summary.GraphLearner}
\alias{print.summary.Learner}
\title{Summarizing mlr3 Learners}
\usage{
\method{summary}{Learner}(object, resample_result = NULL, control = summary_control(), ...)

\method{summary}{GraphLearner}(object, resample_result = NULL, control = summary_control(), ...)

\method{print}{summary.Learner}(x, digits = NULL, n_important = NULL, ...)
}
\arguments{
\item{object}{(\link[mlr3:Learner]{mlr3::Learner})\cr
trained model of class \code{Learner}.}

\item{resample_result}{(\link[mlr3:ResampleResult]{mlr3::ResampleResult})\cr
outcome of \code{resample}. If  NULL (default), no residuals, performances, etc.
are derived.}

\item{control}{(\code{summary_control})\cr
a list with control parameters, see \code{summary_control}.}

\item{...}{(any)\cr
further arguments passed to or from other methods.}

\item{x}{(\code{summary.Learner})\cr
an object of class "summary.Learner", usually a result of a call to \code{summary.Learner}.}

\item{digits}{(numeric(1))\cr
the number of digits to use when printing.}

\item{n_important}{(numeric(1))\cr
number of important variables to be displayed.
If NULL, \code{x$control$n_important} is used.}
}
\value{
summary.Learner returns an object of class "summary.Learner", a \link{list}.
}
\description{
summary method for class \code{Learner}.
}
\details{
This function can be parallelized with the \CRANpkg{future} package.
One job is one resampling iteration, and all jobs are send to an apply function
from \CRANpkg{future.apply} in a single batch.
To select a parallel backend, use \code{\link[future:plan]{future::plan()}}.
}
\examples{
if (require("mlr3")) {
  tsk_peng = tsk("penguins")
  lrn_rpart =  lrn("classif.rpart", predict_type = "prob")
  lrn_rpart$train(task = tsk_peng)
  rsmp_cv5 = rsmp("cv", folds = 3L)
  rr = resample(tsk_peng, lrn_rpart, rsmp_cv5, store_model = TRUE)
  summary(lrn_rpart, rr)
}
}
